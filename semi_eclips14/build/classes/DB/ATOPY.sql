-- 1. SYSTEM 계정에서 ATOPY 계정 권한 승인
--CREATE USER ATOPY IDENTIFIED BY ATOPY;
--GRANT CONNECT, RESOURCE TO ATOPY;

------------------------------------------------------<회원등급 테이블>----------------------------------------------------------
-- 테이블 유무 확인
DROP TABLE MEMBER_GRADE;
DROP TABLE MEMBER;
DROP TABLE MEMBER_GRADE CASCADE CONSTRAINTS;
-- 회원 등급(관리자, 회원)
CREATE TABLE MEMBER_GRADE(
    GRADE_CODE NUMBER PRIMARY KEY CHECK(GRADE_CODE IN(1,2)), 
    GRADE_NAME VARCHAR2(10) NOT NULL UNIQUE
);

INSERT INTO MEMBER_GRADE VALUES(1, '관리자');
INSERT INTO MEMBER_GRADE VALUES(2, '회원');
------------------------------------------------------<회원 관리 테이블>----------------------------------------------------------
-- 2. 테이블 중복 확인
DROP TABLE MEMBER;
DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP SEQUENCE MEMBER_SEQ;
----foreign key 삭제
ALTER TABLE MEMBER REMOVE FOREIGN KEY;   

-- 3. 회원관리 테이블(MEMBER) 생성
CREATE TABLE MEMBER(
    MEMBER_NO NUMBER PRIMARY KEY,
    MEMBER_ID VARCHAR2(30) NOT NULL UNIQUE,
    MEMBER_PW VARCHAR(30) NOT NULL,
    MEMBER_NAME VARCHAR(30) NOT NULL,
    MEMBER_EMAIL VARCHAR(30) NOT NULL,
    MEMBER_RRN VARCHAR(14) NOT NULL UNIQUE,
    GRADE_CODE NUMBER DEFAULT 2,
    FOREIGN KEY (GRADE_CODE) REFERENCES MEMBER_GRADE(GRADE_CODE) ON DELETE CASCADE
);

-- 회원번호 시퀀스 생성
CREATE SEQUENCE MEMBER_SEQ;

-- 관리자 계정 생성 (데이터 삽입)
INSERT INTO MEMBER VALUES (MEMBER_SEQ.NEXTVAL, 'admin', 'admin', '관리자', 'kimo9561@naver.com', '980705-1234567',1 );
INSERT INTO MEMBER VALUES (MEMBER_SEQ.NEXTVAL, 'user', 'user', '사용자', 'kimo9561@naver.com', '960412-1234567', 2);
select * from member;
delete from member where member_no = 3;
------------------------------------------------------<사용자 정보 공유 테이블>----------------------------------------------------------
SELECT * FROM USERBOARD_INFO;
-- 테이블 확인
DROP TABLE USERBOARD_INFO;
DROP SEQUENCE USERINFO_SEQ;

CREATE TABLE USERBOARD_INFO(
   INFO_NO NUMBER,
   MEMBER_NO NUMBER,
   INFO_WRITER VARCHAR2(200),
   INFO_TITLE VARCHAR2(2000) NOT NULL,
   INFO_TEXT LONG NOT NULL,
   INFO_DATE DATE NOT NULL,
   INFO_HITS NUMBER DEFAULT '0' NOT NULL,
   BOARD_SAVE VARCHAR2(3) CHECK(BOARD_SAVE IN ('Y','N')),
   GRADE_CODE NUMBER  DEFAULT 2 ,
   INFO_IMAGE_NAME VARCHAR2(2000) NOT NULL,
   INFO_IMAGE_REALNAME VARCHAR2(2000) NOT NULL,
   INFO_IMAGE_UPLOADPATH VARCHAR2(2000) NOT NULL,
   CONSTRAINT PK_INFO PRIMARY KEY(INFO_NO,MEMBER_NO),
   CONSTRAINT FK_ID_USERBOARD FOREIGN KEY(INFO_WRITER) REFERENCES MEMBER(MEMBER_ID),
   CONSTRAINT FK_GRADE_USERBOARD FOREIGN KEY (GRADE_CODE) REFERENCES MEMBER_GRADE(GRADE_CODE),
   CONSTRAINT FK_MEMBER_USERBOARD FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER(MEMBER_NO)

);
INSERT INTO USERBOARD_INFO VALUES (USERINFO_SEQ.NEXTVAL, 1, 'admin', 'qwe', 'qwert', sysdate, default, 'N' ,default, '');
-- 시퀀스 생성
CREATE SEQUENCE USERINFO_SEQ  
    START WITH 1  
    INCREMENT BY 1 ;  
    

    
----- 사용자 정보 답글 테이블 ----------------------------------------------------------------------------------------------
-- 테이블 확인
DROP TABLE ANSWER_USERINFO;
DROP SEQUENCE USERINFOANSWER_SEQ;

--시퀀스 생성 -- 
CREATE SEQUENCE USERINFOANSWER_SEQ;

--테이블 생성
CREATE TABLE ANSWER_USERINFO(
	INFO_NO NUMBER NOT NULL,
	ANSWER_NO NUMBER NOT NULL,
	ANSWER_WRITER VARCHAR2(1000) NOT NULL,
	ANSWER_CONTENTE VARCHAR2(4000) NOT NULL,
	REGDATE DATE NOT NULL
);

------------------------------------------------------<관리자 정보 공유 테이블>----------------------------------------------------------
SELECT * FROM ADMINBOARD_INFO;
DELETE FROM ADMINBOARD_INFO WHERE INFO_NO = 2;
-- 테이블 확인
DROP TABLE ADMINBOARD_INFO;
DROP SEQUENCE ADMININFO_SEQ;

CREATE TABLE ADMINBOARD_INFO(
   INFO_NO NUMBER,
   MEMBER_NO NUMBER,
   INFO_WRITER VARCHAR2(200),
   INFO_TITLE VARCHAR2(2000) NOT NULL,
   INFO_TEXT LONG NOT NULL,
   INFO_DATE DATE NOT NULL,
   INFO_HITS NUMBER DEFAULT '0' NOT NULL,
   BOARD_SAVE VARCHAR2(3) CHECK(BOARD_SAVE IN ('Y','N')),
   GRADE_CODE NUMBER  DEFAULT 2 ,
   INFO_IMAGE_NAME VARCHAR2(2000) NOT NULL,
   INFO_IMAGE_REALNAME VARCHAR2(2000) NOT NULL,
   INFO_IMAGE_UPLOADPATH VARCHAR2(2000) NOT NULL,
   CONSTRAINT PK_ADMINBOARD PRIMARY KEY(INFO_NO,MEMBER_NO),
   CONSTRAINT FK_ID_ADMINBOARD FOREIGN KEY(INFO_WRITER) REFERENCES MEMBER(MEMBER_ID),
   CONSTRAINT FK_GRADE_ADMINBOARD FOREIGN KEY (GRADE_CODE) REFERENCES MEMBER_GRADE(GRADE_CODE),
   CONSTRAINT FK_MEMBER_ADMINBOARDNO FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER(MEMBER_NO)

);
-- 시퀀스 생성
CREATE SEQUENCE ADMININFO_SEQ;
----- 관리자 정보 답글 테이블 ----------------------------------------------------------------------------------------------
-- 테이블 확인
DROP TABLE ANSWER_ADMIN_INFO;
DROP SEQUENCE ADMIN_INFO_ANSWER_SEQ;

--시퀀스 생성 -- 
CREATE SEQUENCE ADMIN_INFO_ANSWER_SEQ;

--테이블 생성
CREATE TABLE ANSWER_ADMIN_INFO(
	INFO_NO NUMBER NOT NULL,
	ANSWER_NO NUMBER NOT NULL,
	ANSWER_WRITER VARCHAR2(1000) NOT NULL,
	ANSWER_CONTENTE VARCHAR2(4000) NOT NULL,
	REGDATE DATE NOT NULL
	);
------------------------------------------------------<사용자 레시피 테이블>----------------------------------------------------------
-- 테이블 확인
DROP TABLE USER_RECIPE;
DROP SEQUENCE USERRECIPE_SEQ;

-- 시퀀스 생성
CREATE SEQUENCE USERRECIPE_SEQ
	START WITH 1  
    INCREMENT BY 1 ; 

CREATE TABLE USER_RECIPE(
   RECIPE_NO NUMBER,
   MEMBER_NO NUMBER,
   RECIPE_WRITER VARCHAR2(200),
   RECIPE_TITLE VARCHAR2(2000) NOT NULL,
   RECIPE_INGREDIENT VARCHAR2(4000) NOT NULL,
   RECIPE_RECIPE_TEXT LONG NOT NULL,
   BOARD_DATE DATE NOT NULL,
   BOARD_HITS NUMBER DEFAULT '0' NOT NULL,
   BOARD_SAVE VARCHAR(3) CHECK(BOARD_SAVE IN ('Y','N')),
   GRADE_CODE NUMBER  DEFAULT 2,
   RECIPE_IMAGE_NAME VARCHAR2(2000) NOT NULL,
   RECIPE_IMAGE_REALNAME VARCHAR2(2000) NOT NULL,
   RECIPE_IMAGE_UPLOADPATH VARCHAR2(2000) NOT NULL,
   CONSTRAINT PK_USERRECIPE PRIMARY KEY(RECIPE_NO),
   CONSTRAINT FK_ID_USERRECIPE FOREIGN KEY(RECIPE_WRITER) REFERENCES MEMBER(MEMBER_ID),
   CONSTRAINT FK_GARDE_USERRECIPE FOREIGN KEY (GRADE_CODE) REFERENCES MEMBER_GRADE(GRADE_CODE)
);

----- 답글 테이블 -----
-- 테이블 확인
DROP TABLE ANSWER_USERRECIPE;
DROP SEQUENCE ANSWER_USERRECIPE_SEQ;

--시퀀스 생성 -- 
CREATE SEQUENCE ANSWER_USERRECIPE_SEQ;

--테이블 생성
CREATE TABLE ANSWER_USERRECIPE(
	RECIPE_NO NUMBER NOT NULL,
	ANSWER_NO NUMBER NOT NULL,
	ANSWER_WRITER VARCHAR2(1000) NOT NULL,
	ANSWER_CONTENTE VARCHAR2(4000) NOT NULL,
	REGDATE DATE NOT NULL
	);

------------------------------------------------------<관리자 레시피 테이블>----------------------------------------------------------
-- 테이블 확인
DROP TABLE ADMIN_RECIPE;
DROP SEQUENCE ADMIN_RECIPE_SEQ;

-- 시퀀스 생성
CREATE SEQUENCE ADMIN_RECIPE_SEQ;

CREATE TABLE ADMIN_RECIPE(
   RECIPE_NO NUMBER,
   MEMBER_NO NUMBER,
   RECIPE_WRITER VARCHAR2(200),
   RECIPE_TITLE LONG NOT NULL,
   RECIPE_INGREDIENT VARCHAR2(4000) NOT NULL,
   RECIPE_RECIPE_TEXT VARCHAR2(3000) NOT NULL,
   BOARD_DATE DATE NOT NULL,
   BOARD_HITS NUMBER DEFAULT '0' NOT NULL,
   BOARD_SAVE VARCHAR(3) CHECK(BOARD_SAVE IN ('Y','N')),
   GRADE_CODE NUMBER  DEFAULT 2,
   RECIPE_IMAGE_NAME VARCHAR2(2000) NOT NULL,
   RECIPE_IMAGE_REALNAME VARCHAR2(2000) NOT NULL,
   RECIPE_IMAGE_UPLOADPATH VARCHAR2(2000) NOT NULL,
   CONSTRAINT PK_ADMIN_RECIPE PRIMARY KEY(RECIPE_NO),
   CONSTRAINT FK_ID_ADMIN_RECIPE FOREIGN KEY(RECIPE_WRITER) REFERENCES MEMBER(MEMBER_ID),
   CONSTRAINT FK_GARDE_ADMIN_RECIPE FOREIGN KEY (GRADE_CODE) REFERENCES MEMBER_GRADE(GRADE_CODE)
);

----- 답글 테이블 -----
-- 테이블 확인
DROP TABLE ANSWER_ADMIN_RECIPE;
DROP SEQUENCE ANSWER_ADMIN_RECIPE_SEQ;

--시퀀스 생성 -- 
CREATE SEQUENCE ANSWER_ADMIN_RECIPE_SEQ;

--테이블 생성
CREATE TABLE ANSWER_ADMIN_RECIPE(
	RECIPE_NO NUMBER NOT NULL,
	ANSWER_NO NUMBER NOT NULL,
	ANSWER_WRITER VARCHAR2(1000) NOT NULL,
	ANSWER_CONTENTE VARCHAR2(4000) NOT NULL,
	REGDATE DATE NOT NULL
	);

------------------------------------------------------<달력 테이블>----------------------------------------------------------
DROP SEQUENCE CALENDAR_SEQ;
DROP TABLE CALENDAR;

CREATE SEQUENCE CALENDAR_SEQ;
CREATE TABLE CALENDAR(
   MEMBER_NO NUMBER NOT NULL,
   CALENDAR_NO NUMBER PRIMARY KEY,
   TITLE VARCHAR2(2000) NOT NULL,
   CDATE VARCHAR2(2000) NOT NULL,
   CONTENT VARCHAR2(4000)   
);

INSERT INTO CALENDAR VALUES(CALENDAR_SEQ.NEXTVAL, 1, 'ASD', '2020-11-12', 'ASDQW');
---------------------------- 다이어리 테이블 ----------------------------------------------------------
DROP TABLE DIARY;
CREATE SEQUENCE DIARY_SEQ NOCACHE;

CREATE TABLE DIARY(
	DIARY_NO NUMBER,
	MEMBER_NO NUMBER,
	DIARY_TITLE VARCHAR2(2000) NOT NULL,
	DIARY_CONTENT_MORNING VARCHAR2(4000) NOT NULL,
	DIARY_CONTENT_LUNCH VARCHAR2(4000) NOT NULL,
	DIARY_CONTENT_DINNER VARCHAR2(4000) NOT NULL,
	DIARY_CONTENT_RECIPE VARCHAR2(4000) NOT NULL,
	DIARY_DATE DATE NOT NULL,
	DIARY_IMAGE_FILENAME VARCHAR2(4000) NOT NULL,
	DIARY_IMAGE_FILEREALNAME VARCHAR2(4000) NOT NULL,
	DIARY_IMAGE_UPLOADPATH VARCHAR2(4000) NOT NULL,
	CONSTRAINT PK_DIARY PRIMARY KEY (DIARY_NO)
);
-- 시퀀스 생성
drop SEQUENCE DIARY_SEQ;
-- 데이터 삽입

CREATE TABLE CALENDAR_DIARY(
   MEMBER_NO NUMBER,
   DIARY_NO NUMBER,
   TITLE VARCHAR2(2000) NOT NULL,
    CDATE VARCHAR2(2000) NOT NULL,
    URI VARCHAR2(2000)
);
select * from CALENDAR_DIARY;
select * from DIARY;

drop table CALENDAR_DIARY;


COMMIT;

